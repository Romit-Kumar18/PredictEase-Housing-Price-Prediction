name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: backend
            context: ./backend
            image: romitkumar18/predictease-housing-price-prediction-backend
          - name: frontend
            context: ./frontend
            image: romitkumar18/predictease-housing-price-prediction-frontend
          - name: ml-service
            context: ./ml-service
            image: romitkumar18/predictease-housing-price-prediction-ml-service
          - name: nginx
            context: ./nginx
            image: romitkumar18/predictease-housing-price-prediction-nginx

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push ${{ matrix.name }} image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          push: true
          tags: ${{ matrix.image }}:latest

  analyze:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: build-and-push
    strategy:
      matrix:
        include:
          - name: backend
            path: backend
          - name: frontend
            path: frontend
          - name: ml-service
            path: ml-service
          - name: nginx
            path: nginx

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.1.0
        with:
          projectBaseDir: ${{ matrix.path }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: analyze
    defaults:
      run:
        working-directory: terraform

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

